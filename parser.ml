type token =
  | INT of (int)
  | IDENT of (string)
  | ATOM of (string)
  | NAMEDFUN of (string)
  | RECNAME of (string)
  | STRING of (string)
  | FLOAT of (float)
  | BEGIN_FUNCTION
  | DEFINITION
  | END_FUNCTION
  | EOF
  | PLUS
  | SUB
  | DIV
  | MULT
  | LPAREN
  | RPAREN
  | TRUE
  | FALSE
  | IF
  | THEN
  | ELSE
  | END
  | EQ
  | DIFF
  | INF
  | INFEQ
  | SUP
  | SUPEQ
  | AND
  | OR
  | NOT
  | REC
  | SEPARATOR
  | UNIFY
  | MATCHEX
  | WITH
  | ANY
  | ARROW
  | PIPE
  | ARRAY_END
  | ARRAY_LINK
  | SEQUENCER
  | PRINT
  | CONCAT
  | TOINT
  | TOFLOAT
  | TOSTRING
  | TOBOOL

open Parsing;;
let _ = parse_error;;
# 1 "parser.mly"
 (* prelude en OCaml *)

  open Expr


  let remove_end str count =
    let n = String.length str in
    let n_name = String.sub str 0 (n-count) in
    n_name

  let toStr str =
    let n = String.length str in
    let n_name = String.sub str 1 (n-2) in
    n_name


  let rec listToFun l e =
    match l with
    | [] -> e
    | h::t -> Fun(h,listToFun t e)

  let rec tuplelen l =
    match l with
    | TupleNode(a,b) -> 1+
        (
          match b with
            | TupleNode(_,_) -> tuplelen b
            | _               -> 1
        )
    | _             -> 0

  let rec make_app e l =
    match l with
    | a :: [] -> App(e,a)
    | a :: r -> make_app (App (e,a)) r
    | []    -> failwith "Error : empty list"

 
# 94 "parser.ml"
let yytransl_const = [|
  264 (* BEGIN_FUNCTION *);
  265 (* DEFINITION *);
  266 (* END_FUNCTION *);
    0 (* EOF *);
  267 (* PLUS *);
  268 (* SUB *);
  269 (* DIV *);
  270 (* MULT *);
  271 (* LPAREN *);
  272 (* RPAREN *);
  273 (* TRUE *);
  274 (* FALSE *);
  275 (* IF *);
  276 (* THEN *);
  277 (* ELSE *);
  278 (* END *);
  279 (* EQ *);
  280 (* DIFF *);
  281 (* INF *);
  282 (* INFEQ *);
  283 (* SUP *);
  284 (* SUPEQ *);
  285 (* AND *);
  286 (* OR *);
  287 (* NOT *);
  288 (* REC *);
  289 (* SEPARATOR *);
  290 (* UNIFY *);
  291 (* MATCHEX *);
  292 (* WITH *);
  293 (* ANY *);
  294 (* ARROW *);
  295 (* PIPE *);
  296 (* ARRAY_END *);
  297 (* ARRAY_LINK *);
  298 (* SEQUENCER *);
  299 (* PRINT *);
  300 (* CONCAT *);
  301 (* TOINT *);
  302 (* TOFLOAT *);
  303 (* TOSTRING *);
  304 (* TOBOOL *);
    0|]

let yytransl_block = [|
  257 (* INT *);
  258 (* IDENT *);
  259 (* ATOM *);
  260 (* NAMEDFUN *);
  261 (* RECNAME *);
  262 (* STRING *);
  263 (* FLOAT *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\008\000\008\000\007\000\007\000\010\000\009\000\009\000\
\011\000\006\000\006\000\005\000\005\000\000\000"

let yylen = "\002\000\
\002\000\001\000\001\000\002\000\002\000\002\000\002\000\002\000\
\003\000\003\000\003\000\002\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\002\000\002\000\
\006\000\007\000\006\000\007\000\004\000\007\000\005\000\004\000\
\003\000\002\000\001\000\001\000\002\000\001\000\001\000\001\000\
\001\000\001\000\001\000\001\000\003\000\005\000\006\000\003\000\
\004\000\002\000\002\000\002\000\002\000\004\000\001\000\002\000\
\002\000\001\000\002\000\001\000\002\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\041\000\042\000\000\000\000\000\000\000\038\000\
\036\000\000\000\000\000\000\000\043\000\044\000\000\000\000\000\
\000\000\039\000\040\000\000\000\000\000\000\000\000\000\000\000\
\062\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\035\000\000\000\000\000\000\000\
\000\000\033\000\000\000\000\000\000\000\000\000\058\000\000\000\
\000\000\000\000\000\000\000\000\048\000\045\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\032\000\000\000\000\000\057\000\000\000\059\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\055\000\031\000\000\000\000\000\000\000\000\000\046\000\000\000\
\000\000\000\000\056\000\000\000\000\000\000\000\000\000\047\000\
\000\000\000\000\000\000\000\000\030\000\000\000"

let yydgoto = "\002\000\
\025\000\026\000\027\000\028\000\064\000\070\000\060\000\065\000\
\112\000\113\000\071\000"

let yysindex = "\002\000\
\176\255\000\000\000\000\000\000\011\255\079\006\021\255\000\000\
\000\000\127\006\176\255\176\255\000\000\000\000\176\255\176\255\
\176\255\000\000\000\000\176\255\176\255\176\255\176\255\176\255\
\000\000\024\000\028\008\057\255\128\255\252\254\215\255\253\254\
\008\255\208\006\066\255\119\007\142\007\018\255\165\007\028\008\
\028\008\028\008\028\008\028\008\000\000\176\255\176\255\176\255\
\176\255\176\255\176\255\176\255\176\255\176\255\176\255\176\255\
\176\255\176\255\176\255\001\255\000\000\197\255\254\254\197\255\
\254\254\000\000\192\007\176\255\035\255\053\255\000\000\176\255\
\176\255\059\255\176\255\060\255\000\000\000\000\176\255\028\255\
\066\255\066\255\028\008\003\255\070\255\070\255\070\255\070\255\
\070\255\070\255\018\255\018\255\028\008\028\008\001\255\254\254\
\254\254\254\254\000\000\009\255\232\006\000\000\176\255\000\000\
\018\255\000\007\176\255\024\007\176\255\215\007\176\255\028\255\
\000\000\000\000\176\255\048\007\176\255\072\007\000\000\096\007\
\176\255\238\007\000\000\018\255\176\255\018\255\176\255\000\000\
\005\008\176\255\018\255\018\255\000\000\028\008"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\076\000\168\004\000\000\175\006\000\000\000\000\
\175\006\000\000\005\003\000\000\000\000\043\000\000\000\210\004\
\252\004\038\005\080\005\122\005\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\085\000\000\000\000\000\127\000\132\004\
\169\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\047\003\089\003\163\005\219\002\139\003\181\003\223\003\009\004\
\051\004\093\004\211\000\253\000\205\005\252\005\047\001\089\001\
\131\001\173\001\000\000\051\008\000\000\000\000\000\000\000\000\
\215\001\000\000\000\000\000\000\000\000\000\000\000\000\001\002\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\043\002\000\000\093\002\000\000\000\000\
\000\000\000\000\135\002\177\002\000\000\038\006"

let yygindex = "\000\000\
\000\000\000\000\254\255\230\255\000\000\235\255\196\255\219\255\
\000\000\222\255\032\000"

let yytablesize = 2397
let yytable = "\095\000\
\035\000\063\000\001\000\031\000\068\000\073\000\100\000\034\000\
\035\000\036\000\074\000\076\000\037\000\038\000\039\000\048\000\
\075\000\040\000\041\000\042\000\043\000\044\000\032\000\045\000\
\114\000\029\000\067\000\098\000\069\000\069\000\048\000\056\000\
\057\000\058\000\095\000\096\000\102\000\097\000\062\000\095\000\
\069\000\058\000\023\000\081\000\082\000\083\000\084\000\085\000\
\086\000\087\000\088\000\089\000\090\000\091\000\092\000\093\000\
\094\000\003\000\004\000\061\000\098\000\103\000\008\000\009\000\
\010\000\101\000\111\000\107\000\109\000\105\000\106\000\012\000\
\108\000\013\000\014\000\002\000\110\000\123\000\048\000\049\000\
\046\000\047\000\048\000\049\000\034\000\069\000\000\000\000\000\
\000\000\000\000\017\000\069\000\069\000\018\000\056\000\057\000\
\019\000\062\000\056\000\057\000\116\000\104\000\000\000\000\000\
\118\000\104\000\120\000\104\000\122\000\000\000\000\000\000\000\
\124\000\000\000\126\000\000\000\000\000\000\000\129\000\000\000\
\000\000\000\000\131\000\000\000\132\000\000\000\060\000\134\000\
\003\000\004\000\005\000\006\000\007\000\008\000\009\000\010\000\
\000\000\000\000\000\000\011\000\000\000\000\000\012\000\066\000\
\013\000\014\000\015\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\016\000\000\000\
\000\000\017\000\000\000\000\000\018\000\000\000\000\000\019\000\
\037\000\000\000\020\000\000\000\021\000\022\000\023\000\024\000\
\003\000\004\000\005\000\006\000\007\000\008\000\009\000\010\000\
\000\000\000\000\000\000\011\000\000\000\000\000\012\000\000\000\
\013\000\014\000\015\000\000\000\000\000\003\000\004\000\061\000\
\000\000\000\000\008\000\009\000\010\000\000\000\016\000\000\000\
\000\000\017\000\021\000\012\000\018\000\013\000\014\000\019\000\
\000\000\000\000\020\000\000\000\021\000\022\000\023\000\024\000\
\072\000\046\000\047\000\048\000\049\000\000\000\017\000\000\000\
\000\000\018\000\000\000\000\000\019\000\050\000\051\000\052\000\
\053\000\054\000\055\000\056\000\057\000\000\000\000\000\058\000\
\000\000\000\000\000\000\000\000\022\000\000\000\000\000\000\000\
\059\000\035\000\035\000\035\000\000\000\000\000\035\000\035\000\
\035\000\000\000\035\000\035\000\035\000\035\000\035\000\000\000\
\035\000\035\000\035\000\000\000\035\000\035\000\035\000\035\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\000\000\
\000\000\035\000\035\000\000\000\035\000\035\000\035\000\035\000\
\035\000\035\000\035\000\023\000\023\000\023\000\052\000\000\000\
\023\000\023\000\023\000\000\000\023\000\023\000\023\000\000\000\
\023\000\023\000\023\000\023\000\023\000\000\000\023\000\023\000\
\023\000\023\000\023\000\023\000\023\000\023\000\023\000\023\000\
\023\000\000\000\000\000\023\000\023\000\000\000\023\000\023\000\
\023\000\023\000\023\000\023\000\023\000\034\000\034\000\034\000\
\051\000\000\000\034\000\034\000\034\000\000\000\034\000\034\000\
\034\000\034\000\034\000\034\000\034\000\034\000\034\000\000\000\
\034\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
\034\000\034\000\034\000\000\000\000\000\000\000\034\000\000\000\
\034\000\034\000\034\000\034\000\034\000\034\000\034\000\060\000\
\060\000\060\000\061\000\000\000\060\000\060\000\060\000\000\000\
\060\000\060\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\000\000\060\000\060\000\060\000\060\000\060\000\060\000\
\060\000\060\000\060\000\060\000\060\000\000\000\000\000\060\000\
\060\000\000\000\060\000\060\000\060\000\060\000\060\000\000\000\
\060\000\037\000\037\000\037\000\050\000\000\000\037\000\037\000\
\037\000\000\000\037\000\037\000\037\000\037\000\037\000\037\000\
\037\000\037\000\037\000\000\000\037\000\037\000\037\000\037\000\
\037\000\037\000\037\000\037\000\037\000\037\000\037\000\000\000\
\000\000\037\000\037\000\000\000\037\000\037\000\037\000\037\000\
\037\000\000\000\037\000\021\000\021\000\021\000\029\000\000\000\
\021\000\021\000\021\000\000\000\021\000\021\000\021\000\000\000\
\021\000\021\000\021\000\021\000\021\000\000\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\000\000\000\000\021\000\021\000\000\000\021\000\021\000\
\021\000\021\000\021\000\021\000\021\000\022\000\022\000\022\000\
\049\000\000\000\022\000\022\000\022\000\000\000\022\000\022\000\
\022\000\000\000\022\000\022\000\022\000\022\000\022\000\000\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\022\000\000\000\000\000\022\000\022\000\000\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\000\000\
\000\000\000\000\027\000\000\000\000\000\000\000\000\000\052\000\
\052\000\052\000\000\000\000\000\052\000\052\000\052\000\000\000\
\052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\000\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\052\000\052\000\052\000\052\000\000\000\000\000\000\000\
\052\000\000\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\051\000\051\000\051\000\025\000\000\000\051\000\051\000\
\051\000\000\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\000\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\000\000\
\000\000\051\000\051\000\000\000\051\000\051\000\051\000\051\000\
\051\000\000\000\051\000\061\000\061\000\061\000\028\000\000\000\
\061\000\061\000\061\000\000\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\000\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\000\000\000\000\061\000\061\000\000\000\061\000\061\000\
\061\000\061\000\061\000\000\000\061\000\050\000\050\000\050\000\
\026\000\000\000\050\000\050\000\050\000\000\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\000\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\050\000\050\000\000\000\000\000\050\000\050\000\000\000\
\050\000\050\000\050\000\050\000\050\000\000\000\050\000\029\000\
\029\000\029\000\014\000\000\000\029\000\029\000\029\000\000\000\
\029\000\029\000\029\000\000\000\029\000\029\000\029\000\029\000\
\029\000\000\000\029\000\029\000\029\000\029\000\029\000\029\000\
\029\000\029\000\029\000\029\000\029\000\000\000\000\000\029\000\
\029\000\000\000\029\000\029\000\029\000\029\000\029\000\029\000\
\029\000\049\000\049\000\049\000\012\000\000\000\049\000\049\000\
\049\000\000\000\049\000\049\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\000\000\049\000\049\000\049\000\049\000\
\049\000\049\000\049\000\049\000\049\000\049\000\049\000\000\000\
\000\000\049\000\049\000\000\000\049\000\049\000\049\000\000\000\
\049\000\049\000\049\000\027\000\027\000\027\000\010\000\000\000\
\027\000\027\000\027\000\000\000\027\000\027\000\027\000\000\000\
\027\000\027\000\027\000\027\000\027\000\000\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\027\000\000\000\000\000\027\000\027\000\000\000\027\000\027\000\
\027\000\027\000\027\000\027\000\027\000\000\000\000\000\000\000\
\011\000\000\000\000\000\000\000\000\000\025\000\025\000\025\000\
\000\000\000\000\025\000\025\000\025\000\000\000\025\000\025\000\
\025\000\000\000\025\000\025\000\025\000\025\000\025\000\000\000\
\025\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
\025\000\025\000\025\000\000\000\000\000\025\000\025\000\000\000\
\025\000\025\000\025\000\025\000\025\000\025\000\025\000\028\000\
\028\000\028\000\015\000\000\000\028\000\028\000\028\000\000\000\
\028\000\028\000\028\000\000\000\028\000\028\000\028\000\028\000\
\028\000\000\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\028\000\028\000\028\000\028\000\000\000\000\000\028\000\
\028\000\000\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\026\000\026\000\026\000\020\000\000\000\026\000\026\000\
\026\000\000\000\026\000\026\000\026\000\000\000\026\000\026\000\
\026\000\026\000\026\000\000\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\026\000\026\000\000\000\
\000\000\026\000\026\000\000\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\014\000\014\000\014\000\016\000\000\000\
\014\000\014\000\014\000\000\000\014\000\014\000\014\000\000\000\
\014\000\014\000\014\000\014\000\014\000\000\000\014\000\014\000\
\014\000\014\000\014\000\014\000\014\000\014\000\014\000\000\000\
\000\000\000\000\000\000\014\000\014\000\000\000\014\000\014\000\
\014\000\014\000\014\000\014\000\014\000\012\000\012\000\012\000\
\017\000\000\000\012\000\012\000\012\000\000\000\012\000\012\000\
\012\000\000\000\000\000\012\000\012\000\012\000\012\000\000\000\
\012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
\012\000\000\000\000\000\000\000\000\000\012\000\012\000\000\000\
\012\000\012\000\012\000\012\000\012\000\012\000\012\000\010\000\
\010\000\010\000\018\000\000\000\010\000\010\000\010\000\000\000\
\010\000\010\000\010\000\000\000\000\000\010\000\010\000\010\000\
\010\000\000\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\010\000\010\000\000\000\000\000\000\000\000\000\010\000\
\010\000\000\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\011\000\011\000\011\000\019\000\000\000\011\000\011\000\
\011\000\000\000\011\000\011\000\011\000\000\000\000\000\011\000\
\011\000\011\000\011\000\000\000\011\000\011\000\011\000\011\000\
\011\000\011\000\011\000\011\000\011\000\000\000\000\000\000\000\
\000\000\011\000\011\000\000\000\011\000\011\000\011\000\011\000\
\011\000\011\000\011\000\024\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\015\000\015\000\015\000\000\000\000\000\
\015\000\015\000\015\000\000\000\015\000\000\000\000\000\000\000\
\000\000\015\000\015\000\015\000\015\000\000\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\003\000\
\000\000\000\000\000\000\015\000\015\000\000\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\020\000\020\000\020\000\
\000\000\000\000\020\000\020\000\020\000\000\000\020\000\000\000\
\000\000\000\000\000\000\020\000\020\000\020\000\020\000\000\000\
\020\000\020\000\020\000\020\000\020\000\020\000\020\000\020\000\
\020\000\004\000\000\000\000\000\000\000\020\000\020\000\000\000\
\020\000\020\000\020\000\020\000\020\000\020\000\020\000\016\000\
\016\000\016\000\000\000\000\000\016\000\016\000\016\000\000\000\
\016\000\000\000\000\000\000\000\000\000\016\000\016\000\016\000\
\016\000\000\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\016\000\016\000\005\000\000\000\000\000\000\000\016\000\
\016\000\000\000\016\000\016\000\016\000\016\000\016\000\016\000\
\016\000\017\000\017\000\017\000\000\000\000\000\017\000\017\000\
\017\000\000\000\017\000\000\000\000\000\000\000\000\000\017\000\
\017\000\017\000\017\000\000\000\017\000\017\000\017\000\017\000\
\017\000\017\000\017\000\017\000\017\000\006\000\000\000\000\000\
\000\000\017\000\017\000\000\000\017\000\017\000\017\000\017\000\
\017\000\017\000\017\000\018\000\018\000\018\000\000\000\000\000\
\018\000\018\000\018\000\000\000\018\000\000\000\000\000\000\000\
\000\000\018\000\018\000\018\000\018\000\000\000\018\000\018\000\
\018\000\018\000\018\000\018\000\018\000\018\000\018\000\008\000\
\000\000\000\000\000\000\018\000\018\000\000\000\018\000\018\000\
\018\000\018\000\018\000\018\000\018\000\019\000\019\000\019\000\
\000\000\000\000\019\000\019\000\019\000\000\000\019\000\000\000\
\000\000\000\000\000\000\019\000\019\000\019\000\019\000\000\000\
\019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
\019\000\007\000\000\000\000\000\000\000\019\000\019\000\000\000\
\019\000\019\000\019\000\019\000\019\000\019\000\019\000\000\000\
\000\000\000\000\000\000\000\000\000\000\024\000\024\000\024\000\
\024\000\024\000\000\000\024\000\000\000\000\000\000\000\024\000\
\024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
\024\000\024\000\013\000\000\000\024\000\000\000\000\000\024\000\
\000\000\024\000\024\000\000\000\024\000\024\000\000\000\000\000\
\000\000\003\000\003\000\003\000\003\000\003\000\000\000\003\000\
\000\000\000\000\000\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\000\000\000\000\
\003\000\000\000\000\000\003\000\053\000\003\000\003\000\000\000\
\000\000\003\000\004\000\004\000\004\000\000\000\000\000\004\000\
\004\000\004\000\000\000\004\000\000\000\000\000\000\000\000\000\
\004\000\004\000\004\000\004\000\000\000\004\000\004\000\004\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\004\000\000\000\004\000\004\000\004\000\
\004\000\004\000\004\000\009\000\005\000\005\000\005\000\000\000\
\000\000\005\000\005\000\005\000\000\000\005\000\000\000\000\000\
\000\000\000\000\005\000\005\000\005\000\005\000\000\000\005\000\
\005\000\005\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\005\000\000\000\005\000\
\005\000\005\000\005\000\005\000\005\000\054\000\006\000\006\000\
\006\000\000\000\000\000\006\000\006\000\006\000\000\000\006\000\
\000\000\000\000\000\000\000\000\006\000\006\000\006\000\006\000\
\000\000\006\000\006\000\006\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\006\000\
\000\000\006\000\006\000\006\000\006\000\006\000\006\000\000\000\
\008\000\008\000\008\000\000\000\000\000\008\000\008\000\008\000\
\000\000\008\000\000\000\000\000\000\000\000\000\008\000\008\000\
\008\000\008\000\000\000\008\000\008\000\008\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\008\000\000\000\008\000\008\000\008\000\008\000\008\000\
\008\000\000\000\007\000\007\000\007\000\000\000\000\000\007\000\
\007\000\007\000\000\000\007\000\000\000\000\000\000\000\000\000\
\007\000\007\000\007\000\007\000\000\000\007\000\007\000\007\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\007\000\000\000\007\000\007\000\007\000\
\007\000\007\000\007\000\013\000\013\000\013\000\000\000\000\000\
\013\000\013\000\013\000\000\000\013\000\000\000\000\000\000\000\
\000\000\013\000\013\000\013\000\013\000\000\000\013\000\013\000\
\013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\013\000\000\000\013\000\013\000\
\013\000\013\000\013\000\013\000\000\000\053\000\053\000\053\000\
\000\000\000\000\053\000\053\000\053\000\000\000\053\000\000\000\
\000\000\000\000\000\000\053\000\053\000\053\000\053\000\000\000\
\053\000\053\000\053\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\053\000\000\000\
\053\000\053\000\053\000\053\000\053\000\053\000\000\000\000\000\
\000\000\000\000\000\000\000\000\009\000\009\000\009\000\000\000\
\000\000\009\000\009\000\009\000\000\000\009\000\000\000\000\000\
\000\000\000\000\009\000\009\000\009\000\009\000\000\000\009\000\
\009\000\009\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\009\000\000\000\009\000\
\009\000\009\000\009\000\009\000\009\000\000\000\054\000\054\000\
\054\000\000\000\000\000\054\000\054\000\054\000\000\000\054\000\
\000\000\000\000\000\000\000\000\054\000\054\000\054\000\054\000\
\000\000\054\000\054\000\054\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\054\000\
\000\000\054\000\054\000\054\000\054\000\054\000\054\000\003\000\
\030\000\005\000\006\000\007\000\008\000\009\000\010\000\000\000\
\000\000\000\000\011\000\000\000\000\000\012\000\000\000\013\000\
\014\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\
\017\000\000\000\000\000\018\000\000\000\000\000\019\000\000\000\
\000\000\020\000\000\000\021\000\022\000\023\000\024\000\003\000\
\033\000\005\000\006\000\007\000\008\000\009\000\010\000\000\000\
\000\000\000\000\011\000\000\000\000\000\012\000\000\000\013\000\
\014\000\015\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\016\000\000\000\000\000\
\017\000\000\000\000\000\018\000\000\000\000\000\019\000\000\000\
\000\000\020\000\000\000\021\000\022\000\023\000\024\000\042\000\
\042\000\042\000\000\000\000\000\042\000\042\000\042\000\000\000\
\042\000\042\000\042\000\042\000\042\000\042\000\000\000\042\000\
\042\000\000\000\000\000\000\000\000\000\042\000\042\000\042\000\
\042\000\042\000\042\000\042\000\042\000\000\000\000\000\000\000\
\042\000\000\000\000\000\042\000\000\000\000\000\042\000\042\000\
\042\000\077\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\115\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\059\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\117\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\059\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\119\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\059\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\125\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\059\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\127\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\059\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\128\000\046\000\047\000\048\000\049\000\000\000\000\000\
\000\000\059\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\046\000\047\000\048\000\049\000\000\000\078\000\000\000\
\000\000\059\000\000\000\000\000\000\000\050\000\051\000\052\000\
\053\000\054\000\055\000\056\000\057\000\000\000\000\000\058\000\
\046\000\047\000\048\000\049\000\000\000\000\000\000\000\000\000\
\059\000\079\000\000\000\000\000\050\000\051\000\052\000\053\000\
\054\000\055\000\056\000\057\000\000\000\000\000\058\000\046\000\
\047\000\048\000\049\000\000\000\000\000\000\000\000\000\059\000\
\000\000\000\000\000\000\050\000\051\000\052\000\053\000\054\000\
\055\000\056\000\057\000\000\000\000\000\058\000\000\000\000\000\
\080\000\000\000\046\000\047\000\048\000\049\000\059\000\099\000\
\000\000\000\000\000\000\000\000\000\000\000\000\050\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\000\000\000\000\
\058\000\046\000\047\000\048\000\049\000\000\000\000\000\000\000\
\000\000\059\000\000\000\121\000\000\000\050\000\051\000\052\000\
\053\000\054\000\055\000\056\000\057\000\000\000\000\000\058\000\
\046\000\047\000\048\000\049\000\000\000\000\000\000\000\000\000\
\059\000\000\000\000\000\000\000\050\000\051\000\052\000\053\000\
\054\000\055\000\056\000\057\000\000\000\000\000\058\000\046\000\
\047\000\048\000\049\000\130\000\000\000\000\000\000\000\059\000\
\000\000\000\000\133\000\050\000\051\000\052\000\053\000\054\000\
\055\000\056\000\057\000\000\000\000\000\058\000\046\000\047\000\
\048\000\049\000\000\000\000\000\000\000\000\000\059\000\000\000\
\000\000\000\000\050\000\051\000\052\000\053\000\054\000\055\000\
\056\000\057\000\000\000\000\000\058\000\034\000\034\000\034\000\
\034\000\000\000\000\000\000\000\000\000\059\000\000\000\000\000\
\000\000\034\000\034\000\034\000\034\000\034\000\034\000\034\000\
\034\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\034\000"

let yycheck = "\060\000\
\000\000\028\000\001\000\006\000\009\001\009\001\067\000\010\000\
\011\000\012\000\032\000\033\000\015\000\016\000\017\000\013\001\
\009\001\020\000\021\000\022\000\023\000\024\000\002\001\000\000\
\016\001\015\001\029\000\065\000\033\001\033\001\013\001\029\001\
\030\001\033\001\095\000\062\000\002\001\064\000\041\001\100\000\
\033\001\033\001\000\000\046\000\047\000\048\000\049\000\050\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\059\000\001\001\002\001\003\001\098\000\009\001\006\001\007\001\
\008\001\068\000\039\001\009\001\009\001\072\000\073\000\015\001\
\075\000\017\001\018\001\000\000\079\000\112\000\013\001\014\001\
\011\001\012\001\013\001\014\001\000\000\033\001\255\255\255\255\
\255\255\255\255\034\001\033\001\033\001\037\001\029\001\030\001\
\040\001\041\001\029\001\030\001\103\000\070\000\255\255\255\255\
\107\000\074\000\109\000\076\000\111\000\255\255\255\255\255\255\
\115\000\255\255\117\000\255\255\255\255\255\255\121\000\255\255\
\255\255\255\255\125\000\255\255\127\000\255\255\000\000\130\000\
\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\
\255\255\255\255\255\255\012\001\255\255\255\255\015\001\016\001\
\017\001\018\001\019\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\031\001\255\255\
\255\255\034\001\255\255\255\255\037\001\255\255\255\255\040\001\
\000\000\255\255\043\001\255\255\045\001\046\001\047\001\048\001\
\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\
\255\255\255\255\255\255\012\001\255\255\255\255\015\001\255\255\
\017\001\018\001\019\001\255\255\255\255\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\031\001\255\255\
\255\255\034\001\000\000\015\001\037\001\017\001\018\001\040\001\
\255\255\255\255\043\001\255\255\045\001\046\001\047\001\048\001\
\010\001\011\001\012\001\013\001\014\001\255\255\034\001\255\255\
\255\255\037\001\255\255\255\255\040\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\033\001\
\255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
\042\001\001\001\002\001\003\001\255\255\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\255\255\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\011\001\012\001\255\255\
\014\001\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\255\255\255\255\255\255\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\033\001\
\034\001\255\255\036\001\037\001\038\001\039\001\040\001\255\255\
\042\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\039\001\
\040\001\255\255\042\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\011\001\012\001\255\255\
\014\001\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\014\001\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\255\255\255\255\033\001\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\255\255\
\255\255\255\255\000\000\255\255\255\255\255\255\255\255\001\001\
\002\001\003\001\255\255\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\255\255\
\034\001\255\255\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\039\001\
\040\001\255\255\042\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\255\255\042\001\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\255\255\255\255\033\001\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\255\255\042\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\255\255\014\001\015\001\016\001\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\033\001\
\034\001\255\255\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\255\255\
\040\001\041\001\042\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\011\001\012\001\255\255\
\014\001\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\255\255\255\255\255\255\
\000\000\255\255\255\255\255\255\255\255\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\014\001\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\255\255\255\255\033\001\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\255\255\014\001\015\001\016\001\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\033\001\
\034\001\255\255\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\255\255\014\001\015\001\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\011\001\012\001\255\255\
\014\001\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\255\255\
\255\255\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\255\255\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\255\255\255\255\255\255\255\255\033\001\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\255\255\255\255\015\001\016\001\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\255\255\255\255\255\255\255\255\033\001\
\034\001\255\255\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\255\255\255\255\015\001\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\255\255\255\255\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\000\000\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\001\001\002\001\003\001\255\255\255\255\
\006\001\007\001\008\001\255\255\010\001\255\255\255\255\255\255\
\255\255\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\000\000\
\255\255\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\010\001\255\255\
\255\255\255\255\255\255\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\000\000\255\255\255\255\255\255\033\001\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\001\001\
\002\001\003\001\255\255\255\255\006\001\007\001\008\001\255\255\
\010\001\255\255\255\255\255\255\255\255\015\001\016\001\017\001\
\018\001\255\255\020\001\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\000\000\255\255\255\255\255\255\033\001\
\034\001\255\255\036\001\037\001\038\001\039\001\040\001\041\001\
\042\001\001\001\002\001\003\001\255\255\255\255\006\001\007\001\
\008\001\255\255\010\001\255\255\255\255\255\255\255\255\015\001\
\016\001\017\001\018\001\255\255\020\001\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\000\000\255\255\255\255\
\255\255\033\001\034\001\255\255\036\001\037\001\038\001\039\001\
\040\001\041\001\042\001\001\001\002\001\003\001\255\255\255\255\
\006\001\007\001\008\001\255\255\010\001\255\255\255\255\255\255\
\255\255\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\000\000\
\255\255\255\255\255\255\033\001\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\042\001\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\010\001\255\255\
\255\255\255\255\255\255\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\000\000\255\255\255\255\255\255\033\001\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\042\001\255\255\
\255\255\255\255\255\255\255\255\255\255\010\001\011\001\012\001\
\013\001\014\001\255\255\016\001\255\255\255\255\255\255\020\001\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\000\000\255\255\033\001\255\255\255\255\036\001\
\255\255\038\001\039\001\255\255\041\001\042\001\255\255\255\255\
\255\255\010\001\011\001\012\001\013\001\014\001\255\255\016\001\
\255\255\255\255\255\255\020\001\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\255\255\255\255\036\001\000\000\038\001\039\001\255\255\
\255\255\042\001\001\001\002\001\003\001\255\255\255\255\006\001\
\007\001\008\001\255\255\010\001\255\255\255\255\255\255\255\255\
\015\001\016\001\017\001\018\001\255\255\020\001\021\001\022\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\034\001\255\255\036\001\037\001\038\001\
\039\001\040\001\041\001\000\000\001\001\002\001\003\001\255\255\
\255\255\006\001\007\001\008\001\255\255\010\001\255\255\255\255\
\255\255\255\255\015\001\016\001\017\001\018\001\255\255\020\001\
\021\001\022\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\034\001\255\255\036\001\
\037\001\038\001\039\001\040\001\041\001\000\000\001\001\002\001\
\003\001\255\255\255\255\006\001\007\001\008\001\255\255\010\001\
\255\255\255\255\255\255\255\255\015\001\016\001\017\001\018\001\
\255\255\020\001\021\001\022\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\034\001\
\255\255\036\001\037\001\038\001\039\001\040\001\041\001\255\255\
\001\001\002\001\003\001\255\255\255\255\006\001\007\001\008\001\
\255\255\010\001\255\255\255\255\255\255\255\255\015\001\016\001\
\017\001\018\001\255\255\020\001\021\001\022\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\034\001\255\255\036\001\037\001\038\001\039\001\040\001\
\041\001\255\255\001\001\002\001\003\001\255\255\255\255\006\001\
\007\001\008\001\255\255\010\001\255\255\255\255\255\255\255\255\
\015\001\016\001\017\001\018\001\255\255\020\001\021\001\022\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\034\001\255\255\036\001\037\001\038\001\
\039\001\040\001\041\001\001\001\002\001\003\001\255\255\255\255\
\006\001\007\001\008\001\255\255\010\001\255\255\255\255\255\255\
\255\255\015\001\016\001\017\001\018\001\255\255\020\001\021\001\
\022\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\034\001\255\255\036\001\037\001\
\038\001\039\001\040\001\041\001\255\255\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\010\001\255\255\
\255\255\255\255\255\255\015\001\016\001\017\001\018\001\255\255\
\020\001\021\001\022\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\034\001\255\255\
\036\001\037\001\038\001\039\001\040\001\041\001\255\255\255\255\
\255\255\255\255\255\255\255\255\001\001\002\001\003\001\255\255\
\255\255\006\001\007\001\008\001\255\255\010\001\255\255\255\255\
\255\255\255\255\015\001\016\001\017\001\018\001\255\255\020\001\
\021\001\022\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\034\001\255\255\036\001\
\037\001\038\001\039\001\040\001\041\001\255\255\001\001\002\001\
\003\001\255\255\255\255\006\001\007\001\008\001\255\255\010\001\
\255\255\255\255\255\255\255\255\015\001\016\001\017\001\018\001\
\255\255\020\001\021\001\022\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\034\001\
\255\255\036\001\037\001\038\001\039\001\040\001\041\001\001\001\
\002\001\003\001\004\001\005\001\006\001\007\001\008\001\255\255\
\255\255\255\255\012\001\255\255\255\255\015\001\255\255\017\001\
\018\001\019\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\031\001\255\255\255\255\
\034\001\255\255\255\255\037\001\255\255\255\255\040\001\255\255\
\255\255\043\001\255\255\045\001\046\001\047\001\048\001\001\001\
\002\001\003\001\004\001\005\001\006\001\007\001\008\001\255\255\
\255\255\255\255\012\001\255\255\255\255\015\001\255\255\017\001\
\018\001\019\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\031\001\255\255\255\255\
\034\001\255\255\255\255\037\001\255\255\255\255\040\001\255\255\
\255\255\043\001\255\255\045\001\046\001\047\001\048\001\001\001\
\002\001\003\001\255\255\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\013\001\014\001\015\001\255\255\017\001\
\018\001\255\255\255\255\255\255\255\255\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\255\255\
\034\001\255\255\255\255\037\001\255\255\255\255\040\001\041\001\
\042\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\255\255\042\001\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\011\001\012\001\013\001\014\001\255\255\016\001\255\255\
\255\255\042\001\255\255\255\255\255\255\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\033\001\
\011\001\012\001\013\001\014\001\255\255\255\255\255\255\255\255\
\042\001\020\001\255\255\255\255\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\255\255\255\255\033\001\011\001\
\012\001\013\001\014\001\255\255\255\255\255\255\255\255\042\001\
\255\255\255\255\255\255\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\255\255\255\255\033\001\255\255\255\255\
\036\001\255\255\011\001\012\001\013\001\014\001\042\001\016\001\
\255\255\255\255\255\255\255\255\255\255\255\255\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\255\255\255\255\
\033\001\011\001\012\001\013\001\014\001\255\255\255\255\255\255\
\255\255\042\001\255\255\021\001\255\255\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\255\255\255\255\033\001\
\011\001\012\001\013\001\014\001\255\255\255\255\255\255\255\255\
\042\001\255\255\255\255\255\255\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\255\255\255\255\033\001\011\001\
\012\001\013\001\014\001\038\001\255\255\255\255\255\255\042\001\
\255\255\255\255\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\255\255\255\255\033\001\011\001\012\001\
\013\001\014\001\255\255\255\255\255\255\255\255\042\001\255\255\
\255\255\255\255\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\255\255\255\255\033\001\011\001\012\001\013\001\
\014\001\255\255\255\255\255\255\255\255\042\001\255\255\255\255\
\255\255\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\042\001"

let yynames_const = "\
  BEGIN_FUNCTION\000\
  DEFINITION\000\
  END_FUNCTION\000\
  EOF\000\
  PLUS\000\
  SUB\000\
  DIV\000\
  MULT\000\
  LPAREN\000\
  RPAREN\000\
  TRUE\000\
  FALSE\000\
  IF\000\
  THEN\000\
  ELSE\000\
  END\000\
  EQ\000\
  DIFF\000\
  INF\000\
  INFEQ\000\
  SUP\000\
  SUPEQ\000\
  AND\000\
  OR\000\
  NOT\000\
  REC\000\
  SEPARATOR\000\
  UNIFY\000\
  MATCHEX\000\
  WITH\000\
  ANY\000\
  ARROW\000\
  PIPE\000\
  ARRAY_END\000\
  ARRAY_LINK\000\
  SEQUENCER\000\
  PRINT\000\
  CONCAT\000\
  TOINT\000\
  TOFLOAT\000\
  TOSTRING\000\
  TOBOOL\000\
  "

let yynames_block = "\
  INT\000\
  IDENT\000\
  ATOM\000\
  NAMEDFUN\000\
  RECNAME\000\
  STRING\000\
  FLOAT\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'declare) in
    Obj.repr(
# 86 "parser.mly"
                                           ( _1                        )
# 902 "parser.ml"
               : Expr.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 89 "parser.mly"
                                          (_1)
# 909 "parser.ml"
               : 'declare))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 92 "parser.mly"
                                        ( _1                        )
# 916 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 93 "parser.mly"
                             (Print _2)
# 923 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 94 "parser.mly"
                                  (ToInt _2)
# 930 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 95 "parser.mly"
                                    (ToFloat _2)
# 937 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 96 "parser.mly"
                                   (ToBool _2)
# 944 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 97 "parser.mly"
                                     (ToString _2)
# 951 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 98 "parser.mly"
                             (Sequencer(_1,_3))
# 959 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 99 "parser.mly"
                                     ( Add(_1,_3)                )
# 967 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 100 "parser.mly"
                                    ( Sub(_1,_3)                )
# 975 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 101 "parser.mly"
                                    (Neg(_2))
# 982 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 102 "parser.mly"
                                    ( Div(_1,_3)                )
# 990 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 103 "parser.mly"
                                     ( Mult(_1,_3)                )
# 998 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 104 "parser.mly"
                                    (Eq(_1,_3))
# 1006 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 105 "parser.mly"
                                     (Inf(_1,_3))
# 1014 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 106 "parser.mly"
                                       (Infeq(_1,_3))
# 1022 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 107 "parser.mly"
                                     (Sup(_1,_3))
# 1030 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 108 "parser.mly"
                                       (Supeq(_1,_3))
# 1038 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 109 "parser.mly"
                                    (Diff(_1,_3))
# 1046 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 110 "parser.mly"
                                    (And(_1,_3))
# 1054 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 111 "parser.mly"
                                   (And(_1,_3))
# 1062 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 112 "parser.mly"
                               (Not _2)
# 1069 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'simpleexpr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexprlist) in
    Obj.repr(
# 113 "parser.mly"
                                        ( make_app _1 (List.rev _2) )
# 1077 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 115 "parser.mly"
                                                         (RecFun((remove_end _1 2),_2,_4,_6))
# 1087 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'separatelist) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 116 "parser.mly"
                                                                       (RecFun (remove_end _1 2,_2,(listToFun (List.rev _3) _5),_7))
# 1098 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 118 "parser.mly"
                                                          (NamedFun(remove_end _1 1,_2,_4,_6))
# 1108 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'separatelist) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 119 "parser.mly"
                                                                        (NamedFun(remove_end _1 1,_2,(listToFun (List.rev _3) _5),_7))
# 1119 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 121 "parser.mly"
                                         (NamedExp(remove_end _1 1,_2,_4))
# 1128 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 5 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 123 "parser.mly"
                                                             (Cond (_2,_4,_6))
# 1137 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'tuplenode) in
    Obj.repr(
# 124 "parser.mly"
                                                 (NamedTuple(_1,Tuple(tuplelen (TupleNode(_3,_4)),TupleNode(_3,_4))))
# 1146 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 125 "parser.mly"
                                       (NamedTuple(_1,Tuple(1,TupleNode(_3,TupleEnd))))
# 1154 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    Obj.repr(
# 126 "parser.mly"
                                              (Atom _1)
# 1161 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'tuplenode) in
    Obj.repr(
# 127 "parser.mly"
                                                 (Tuple(tuplelen (TupleNode(_1,_2)),TupleNode(_1,_2)))
# 1169 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 131 "parser.mly"
                                                (Atom _1)
# 1176 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 132 "parser.mly"
                                          (Float _1)
# 1183 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'simpleexpr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'Llist) in
    Obj.repr(
# 133 "parser.mly"
                             (Node(_1,_2))
# 1191 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 134 "parser.mly"
                                          (String(toStr _1))
# 1198 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 135 "parser.mly"
                                          (Any)
# 1204 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 136 "parser.mly"
                                          (Arr_End)
# 1210 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 137 "parser.mly"
                                          ( Int _1                    )
# 1217 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 138 "parser.mly"
                                          ( Var _1                    )
# 1224 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 139 "parser.mly"
                                          (Bool true)
# 1230 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 140 "parser.mly"
                                          (Bool false)
# 1236 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 141 "parser.mly"
                                          (_2)
# 1243 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 142 "parser.mly"
                                                             ( Fun (_2,_4)  )
# 1251 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : 'separatelist) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 143 "parser.mly"
                                                                          ( Fun (_2, listToFun (List.rev _3) _5)  )
# 1260 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 144 "parser.mly"
                                            ( Exp(_2)  )
# 1267 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'matchlist) in
    Obj.repr(
# 145 "parser.mly"
                                (buildUnify (_2) (List.rev _4))
# 1275 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'Llist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'Llist) in
    Obj.repr(
# 149 "parser.mly"
                             (Node(_1,_2))
# 1283 "parser.ml"
               : 'Llist))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 150 "parser.mly"
                             (_2)
# 1290 "parser.ml"
               : 'Llist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'tuplenode) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'tuplenode) in
    Obj.repr(
# 156 "parser.mly"
                               (TupleNode(_1,_2))
# 1298 "parser.ml"
               : 'tuplenode))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 157 "parser.mly"
                          (_2)
# 1305 "parser.ml"
               : 'tuplenode))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 160 "parser.mly"
                           ((_2,_4))
# 1313 "parser.ml"
               : 'matchcond))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'matchcond) in
    Obj.repr(
# 164 "parser.mly"
                ([_1])
# 1320 "parser.ml"
               : 'matchlist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'matchlist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'matchcond) in
    Obj.repr(
# 165 "parser.mly"
                          (_2::_1)
# 1328 "parser.ml"
               : 'matchlist))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 168 "parser.mly"
                       (_2)
# 1335 "parser.ml"
               : 'separatevar))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'separatevar) in
    Obj.repr(
# 172 "parser.mly"
                  ( [_1] )
# 1342 "parser.ml"
               : 'separatelist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'separatelist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'separatevar) in
    Obj.repr(
# 173 "parser.mly"
                               (_2::_1)
# 1350 "parser.ml"
               : 'separatelist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 178 "parser.mly"
               ( [_1] )
# 1357 "parser.ml"
               : 'simpleexprlist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'simpleexprlist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 179 "parser.mly"
                               ( _2 :: _1 )
# 1365 "parser.ml"
               : 'simpleexprlist))
(* Entry main *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let main (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Expr.expr)
