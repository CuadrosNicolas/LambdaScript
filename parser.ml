type token =
  | INT of (int)
  | IDENT of (string)
  | ATOM of (string)
  | NAMEDFUN of (string)
  | RECNAME of (string)
  | STRING of (string)
  | FLOAT of (float)
  | BEGIN_FUNCTION
  | DEFINITION
  | END_FUNCTION
  | EOF
  | PLUS
  | SUB
  | DIV
  | MULT
  | LPAREN
  | RPAREN
  | MODULO
  | TRUE
  | FALSE
  | IF
  | THEN
  | ELSE
  | END
  | EQ
  | DIFF
  | INF
  | INFEQ
  | SUP
  | SUPEQ
  | AND
  | OR
  | NOT
  | REC
  | SEPARATOR
  | UNIFY
  | MATCHEX
  | WITH
  | ANY
  | ARROW
  | PIPE
  | ARRAY_END
  | ARRAY_LINK
  | SEQUENCER
  | PRINT
  | TOINT
  | TOFLOAT
  | TOSTRING
  | TOBOOL

open Parsing;;
let _ = parse_error;;
# 1 "parser.mly"
 (* prelude en OCaml *)

  open Expr


  let remove_end str count =
    let n = String.length str in
    let n_name = String.sub str 0 (n-count) in
    n_name

  let toStr str =
    let n = String.length str in
    let n_name = String.sub str 1 (n-2) in
    n_name


  let rec listToFun l e =
    match l with
    | [] -> e
    | h::t -> Fun(h,listToFun t e)

  let rec tuplelen l =
    match l with
    | TupleNode(a,b) -> 1+
        (
          match b with
            | TupleNode(_,_) -> tuplelen b
            | _               -> 1
        )
    | _             -> 0

  let rec make_app e l =
    match l with
    | a :: [] -> App(e,a)
    | a :: r -> make_app (App (e,a)) r
    | []    -> failwith "Error : empty list"

 
# 94 "parser.ml"
let yytransl_const = [|
  264 (* BEGIN_FUNCTION *);
  265 (* DEFINITION *);
  266 (* END_FUNCTION *);
    0 (* EOF *);
  267 (* PLUS *);
  268 (* SUB *);
  269 (* DIV *);
  270 (* MULT *);
  271 (* LPAREN *);
  272 (* RPAREN *);
  273 (* MODULO *);
  274 (* TRUE *);
  275 (* FALSE *);
  276 (* IF *);
  277 (* THEN *);
  278 (* ELSE *);
  279 (* END *);
  280 (* EQ *);
  281 (* DIFF *);
  282 (* INF *);
  283 (* INFEQ *);
  284 (* SUP *);
  285 (* SUPEQ *);
  286 (* AND *);
  287 (* OR *);
  288 (* NOT *);
  289 (* REC *);
  290 (* SEPARATOR *);
  291 (* UNIFY *);
  292 (* MATCHEX *);
  293 (* WITH *);
  294 (* ANY *);
  295 (* ARROW *);
  296 (* PIPE *);
  297 (* ARRAY_END *);
  298 (* ARRAY_LINK *);
  299 (* SEQUENCER *);
  300 (* PRINT *);
  301 (* TOINT *);
  302 (* TOFLOAT *);
  303 (* TOSTRING *);
  304 (* TOBOOL *);
    0|]

let yytransl_block = [|
  257 (* INT *);
  258 (* IDENT *);
  259 (* ATOM *);
  260 (* NAMEDFUN *);
  261 (* RECNAME *);
  262 (* STRING *);
  263 (* FLOAT *);
    0|]

let yylhs = "\255\255\
\001\000\002\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
\004\000\004\000\008\000\008\000\007\000\007\000\010\000\009\000\
\009\000\011\000\006\000\006\000\005\000\005\000\000\000"

let yylen = "\002\000\
\002\000\001\000\001\000\002\000\002\000\002\000\002\000\002\000\
\003\000\003\000\003\000\003\000\002\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\002\000\
\002\000\006\000\007\000\006\000\007\000\004\000\007\000\005\000\
\004\000\003\000\002\000\001\000\001\000\002\000\001\000\001\000\
\001\000\001\000\001\000\001\000\001\000\003\000\005\000\006\000\
\003\000\004\000\002\000\002\000\002\000\002\000\004\000\001\000\
\002\000\002\000\001\000\002\000\001\000\002\000\002\000"

let yydefred = "\000\000\
\000\000\000\000\042\000\043\000\000\000\000\000\000\000\039\000\
\037\000\000\000\000\000\000\000\044\000\045\000\000\000\000\000\
\000\000\040\000\041\000\000\000\000\000\000\000\000\000\000\000\
\063\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\036\000\000\000\000\000\
\000\000\000\000\034\000\000\000\000\000\000\000\000\000\059\000\
\000\000\000\000\000\000\000\000\000\000\049\000\046\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\033\000\000\000\000\000\058\000\
\000\000\060\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\056\000\032\000\000\000\000\000\000\000\000\000\
\047\000\000\000\000\000\000\000\057\000\000\000\000\000\000\000\
\000\000\048\000\000\000\000\000\000\000\000\000\031\000\000\000"

let yydgoto = "\002\000\
\025\000\026\000\027\000\028\000\065\000\071\000\061\000\066\000\
\114\000\115\000\072\000"

let yysindex = "\012\000\
\179\255\000\000\000\000\000\000\244\254\149\006\022\255\000\000\
\000\000\197\006\179\255\179\255\000\000\000\000\179\255\179\255\
\179\255\000\000\000\000\179\255\179\255\179\255\179\255\179\255\
\000\000\027\000\113\008\059\255\131\255\253\254\219\255\255\254\
\008\255\023\007\012\255\197\007\221\007\019\255\245\007\113\008\
\113\008\113\008\113\008\113\008\000\000\179\255\179\255\179\255\
\179\255\179\255\179\255\179\255\179\255\179\255\179\255\179\255\
\179\255\179\255\179\255\179\255\006\255\000\000\200\255\027\255\
\200\255\027\255\000\000\017\008\179\255\068\255\009\255\000\000\
\179\255\179\255\054\255\179\255\055\255\000\000\000\000\179\255\
\031\255\012\255\012\255\113\008\019\255\019\255\165\004\165\004\
\165\004\165\004\165\004\165\004\069\255\069\255\113\008\113\008\
\006\255\027\255\027\255\027\255\000\000\252\254\048\007\000\000\
\179\255\000\000\019\255\073\007\179\255\098\007\179\255\041\008\
\179\255\031\255\000\000\000\000\179\255\123\007\179\255\148\007\
\000\000\173\007\179\255\065\008\000\000\019\255\179\255\019\255\
\179\255\000\000\089\008\179\255\019\255\019\255\000\000\113\008"

let yyrindex = "\000\000\
\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\076\000\232\004\000\000\245\006\000\000\000\000\
\245\006\000\000\224\002\000\000\000\000\044\000\000\000\021\005\
\064\005\107\005\150\005\192\005\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\087\000\000\000\000\000\130\000\
\189\004\173\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\013\003\056\003\234\005\216\000\005\001\185\003\228\003\
\017\004\060\004\103\004\146\004\099\003\142\003\020\006\064\006\
\048\001\091\001\134\001\177\001\000\000\137\008\000\000\000\000\
\000\000\000\000\220\001\000\000\000\000\000\000\000\000\000\000\
\000\000\009\002\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\052\002\000\000\095\002\
\000\000\000\000\000\000\000\000\138\002\181\002\000\000\107\006"

let yygindex = "\000\000\
\000\000\000\000\255\255\230\255\000\000\002\000\195\255\194\255\
\000\000\226\255\021\000"

let yytablesize = 2484
let yytable = "\097\000\
\036\000\064\000\029\000\100\000\031\000\069\000\102\000\074\000\
\034\000\035\000\036\000\116\000\001\000\037\000\038\000\039\000\
\076\000\105\000\040\000\041\000\042\000\043\000\044\000\032\000\
\048\000\049\000\045\000\068\000\050\000\059\000\070\000\048\000\
\070\000\075\000\077\000\097\000\098\000\100\000\099\000\059\000\
\097\000\070\000\070\000\024\000\082\000\083\000\084\000\085\000\
\086\000\087\000\088\000\089\000\090\000\091\000\092\000\093\000\
\094\000\095\000\096\000\003\000\004\000\062\000\109\000\111\000\
\008\000\009\000\010\000\103\000\063\000\104\000\113\000\107\000\
\108\000\012\000\110\000\002\000\013\000\014\000\112\000\046\000\
\047\000\048\000\049\000\125\000\000\000\050\000\035\000\070\000\
\070\000\000\000\000\000\106\000\000\000\017\000\000\000\106\000\
\018\000\106\000\000\000\019\000\063\000\000\000\000\000\118\000\
\000\000\000\000\000\000\120\000\000\000\122\000\000\000\124\000\
\000\000\000\000\000\000\126\000\000\000\128\000\000\000\000\000\
\000\000\131\000\000\000\000\000\000\000\133\000\000\000\134\000\
\000\000\061\000\136\000\003\000\004\000\005\000\006\000\007\000\
\008\000\009\000\010\000\000\000\000\000\000\000\011\000\000\000\
\000\000\012\000\067\000\000\000\013\000\014\000\015\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\016\000\000\000\000\000\017\000\000\000\000\000\
\018\000\000\000\000\000\019\000\038\000\000\000\020\000\021\000\
\022\000\023\000\024\000\003\000\004\000\005\000\006\000\007\000\
\008\000\009\000\010\000\000\000\000\000\000\000\011\000\000\000\
\000\000\012\000\000\000\000\000\013\000\014\000\015\000\000\000\
\003\000\004\000\062\000\000\000\000\000\008\000\009\000\010\000\
\000\000\000\000\016\000\000\000\000\000\017\000\012\000\015\000\
\018\000\013\000\014\000\019\000\000\000\000\000\020\000\021\000\
\022\000\023\000\024\000\000\000\073\000\046\000\047\000\048\000\
\049\000\000\000\017\000\050\000\000\000\018\000\000\000\000\000\
\019\000\000\000\051\000\052\000\053\000\054\000\055\000\056\000\
\057\000\058\000\000\000\000\000\059\000\000\000\000\000\000\000\
\000\000\036\000\036\000\036\000\010\000\060\000\036\000\036\000\
\036\000\000\000\036\000\036\000\036\000\036\000\036\000\000\000\
\036\000\036\000\036\000\036\000\000\000\036\000\036\000\036\000\
\036\000\036\000\036\000\036\000\036\000\036\000\036\000\036\000\
\000\000\000\000\036\000\036\000\000\000\036\000\036\000\036\000\
\036\000\036\000\036\000\036\000\024\000\024\000\024\000\053\000\
\000\000\024\000\024\000\024\000\000\000\024\000\024\000\024\000\
\000\000\024\000\024\000\024\000\024\000\024\000\024\000\000\000\
\024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
\024\000\024\000\024\000\000\000\000\000\024\000\024\000\000\000\
\024\000\024\000\024\000\024\000\024\000\024\000\024\000\035\000\
\035\000\035\000\052\000\000\000\035\000\035\000\035\000\000\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\035\000\035\000\000\000\035\000\035\000\035\000\035\000\035\000\
\035\000\035\000\035\000\035\000\035\000\035\000\000\000\000\000\
\000\000\035\000\000\000\035\000\035\000\035\000\035\000\035\000\
\035\000\035\000\061\000\061\000\061\000\062\000\000\000\061\000\
\061\000\061\000\000\000\061\000\061\000\061\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\000\000\061\000\061\000\
\061\000\061\000\061\000\061\000\061\000\061\000\061\000\061\000\
\061\000\000\000\000\000\061\000\061\000\000\000\061\000\061\000\
\061\000\061\000\061\000\000\000\061\000\038\000\038\000\038\000\
\051\000\000\000\038\000\038\000\038\000\000\000\038\000\038\000\
\038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
\000\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
\038\000\038\000\038\000\038\000\000\000\000\000\038\000\038\000\
\000\000\038\000\038\000\038\000\038\000\038\000\000\000\038\000\
\015\000\015\000\015\000\030\000\000\000\015\000\015\000\015\000\
\000\000\015\000\015\000\015\000\000\000\015\000\015\000\015\000\
\015\000\015\000\015\000\000\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\015\000\015\000\015\000\015\000\000\000\
\000\000\015\000\015\000\000\000\015\000\015\000\015\000\015\000\
\015\000\015\000\015\000\000\000\000\000\010\000\010\000\010\000\
\050\000\000\000\010\000\010\000\010\000\000\000\010\000\010\000\
\010\000\000\000\010\000\010\000\010\000\010\000\010\000\010\000\
\000\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
\010\000\010\000\010\000\010\000\000\000\000\000\010\000\010\000\
\000\000\010\000\010\000\010\000\010\000\010\000\010\000\010\000\
\053\000\053\000\053\000\028\000\000\000\053\000\053\000\053\000\
\000\000\053\000\053\000\053\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\000\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\053\000\053\000\053\000\053\000\000\000\
\000\000\000\000\053\000\000\000\053\000\053\000\053\000\053\000\
\053\000\053\000\053\000\052\000\052\000\052\000\026\000\000\000\
\052\000\052\000\052\000\000\000\052\000\052\000\052\000\052\000\
\052\000\052\000\052\000\052\000\052\000\052\000\000\000\052\000\
\052\000\052\000\052\000\052\000\052\000\052\000\052\000\052\000\
\052\000\052\000\000\000\000\000\052\000\052\000\000\000\052\000\
\052\000\052\000\052\000\052\000\000\000\052\000\062\000\062\000\
\062\000\029\000\000\000\062\000\062\000\062\000\000\000\062\000\
\062\000\062\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\000\000\062\000\062\000\062\000\062\000\062\000\062\000\
\062\000\062\000\062\000\062\000\062\000\000\000\000\000\062\000\
\062\000\000\000\062\000\062\000\062\000\062\000\062\000\000\000\
\062\000\051\000\051\000\051\000\027\000\000\000\051\000\051\000\
\051\000\000\000\051\000\051\000\051\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\000\000\051\000\051\000\051\000\
\051\000\051\000\051\000\051\000\051\000\051\000\051\000\051\000\
\000\000\000\000\051\000\051\000\000\000\051\000\051\000\051\000\
\051\000\051\000\000\000\051\000\030\000\030\000\030\000\013\000\
\000\000\030\000\030\000\030\000\000\000\030\000\030\000\030\000\
\000\000\030\000\030\000\030\000\030\000\030\000\030\000\000\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\030\000\
\030\000\030\000\030\000\000\000\000\000\030\000\030\000\000\000\
\030\000\030\000\030\000\030\000\030\000\030\000\030\000\000\000\
\000\000\050\000\050\000\050\000\011\000\000\000\050\000\050\000\
\050\000\000\000\050\000\050\000\050\000\050\000\050\000\050\000\
\050\000\050\000\050\000\050\000\000\000\050\000\050\000\050\000\
\050\000\050\000\050\000\050\000\050\000\050\000\050\000\050\000\
\000\000\000\000\050\000\050\000\000\000\050\000\050\000\050\000\
\000\000\050\000\050\000\050\000\028\000\028\000\028\000\012\000\
\000\000\028\000\028\000\028\000\000\000\028\000\028\000\028\000\
\000\000\028\000\028\000\028\000\028\000\028\000\028\000\000\000\
\028\000\028\000\028\000\028\000\028\000\028\000\028\000\028\000\
\028\000\028\000\028\000\000\000\000\000\028\000\028\000\000\000\
\028\000\028\000\028\000\028\000\028\000\028\000\028\000\026\000\
\026\000\026\000\022\000\000\000\026\000\026\000\026\000\000\000\
\026\000\026\000\026\000\000\000\026\000\026\000\026\000\026\000\
\026\000\026\000\000\000\026\000\026\000\026\000\026\000\026\000\
\026\000\026\000\026\000\026\000\026\000\026\000\000\000\000\000\
\026\000\026\000\000\000\026\000\026\000\026\000\026\000\026\000\
\026\000\026\000\029\000\029\000\029\000\023\000\000\000\029\000\
\029\000\029\000\000\000\029\000\029\000\029\000\000\000\029\000\
\029\000\029\000\029\000\029\000\029\000\000\000\029\000\029\000\
\029\000\029\000\029\000\029\000\029\000\029\000\029\000\029\000\
\029\000\000\000\000\000\029\000\029\000\000\000\029\000\029\000\
\029\000\029\000\029\000\029\000\029\000\027\000\027\000\027\000\
\016\000\000\000\027\000\027\000\027\000\000\000\027\000\027\000\
\027\000\000\000\027\000\027\000\027\000\027\000\027\000\027\000\
\000\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\027\000\027\000\027\000\027\000\000\000\000\000\027\000\027\000\
\000\000\027\000\027\000\027\000\027\000\027\000\027\000\027\000\
\013\000\013\000\013\000\021\000\000\000\013\000\013\000\013\000\
\000\000\013\000\013\000\013\000\000\000\000\000\013\000\013\000\
\000\000\013\000\013\000\000\000\013\000\013\000\013\000\013\000\
\013\000\013\000\013\000\013\000\013\000\013\000\013\000\000\000\
\000\000\013\000\013\000\000\000\013\000\013\000\013\000\013\000\
\013\000\013\000\013\000\000\000\000\000\011\000\011\000\011\000\
\017\000\000\000\011\000\011\000\011\000\000\000\011\000\011\000\
\011\000\000\000\000\000\011\000\011\000\000\000\011\000\011\000\
\000\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
\011\000\011\000\011\000\011\000\000\000\000\000\011\000\011\000\
\000\000\011\000\011\000\011\000\011\000\011\000\011\000\011\000\
\012\000\012\000\012\000\018\000\000\000\012\000\012\000\012\000\
\000\000\012\000\012\000\012\000\000\000\000\000\012\000\012\000\
\000\000\012\000\012\000\000\000\012\000\012\000\012\000\012\000\
\012\000\012\000\012\000\012\000\012\000\012\000\012\000\000\000\
\000\000\012\000\012\000\000\000\012\000\012\000\012\000\012\000\
\012\000\012\000\012\000\022\000\022\000\022\000\019\000\000\000\
\022\000\022\000\022\000\000\000\022\000\000\000\000\000\000\000\
\000\000\022\000\022\000\000\000\022\000\022\000\000\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\022\000\022\000\
\022\000\022\000\000\000\000\000\022\000\022\000\000\000\022\000\
\022\000\022\000\022\000\022\000\022\000\022\000\023\000\023\000\
\023\000\020\000\000\000\023\000\023\000\023\000\000\000\023\000\
\000\000\000\000\000\000\000\000\023\000\023\000\000\000\023\000\
\023\000\000\000\023\000\023\000\023\000\023\000\023\000\023\000\
\023\000\023\000\023\000\023\000\023\000\000\000\000\000\023\000\
\023\000\000\000\023\000\023\000\023\000\023\000\023\000\023\000\
\023\000\016\000\016\000\016\000\025\000\000\000\016\000\016\000\
\016\000\000\000\016\000\000\000\000\000\000\000\000\000\016\000\
\016\000\000\000\016\000\016\000\000\000\016\000\016\000\016\000\
\016\000\016\000\016\000\016\000\016\000\016\000\000\000\000\000\
\000\000\000\000\016\000\016\000\000\000\016\000\016\000\016\000\
\016\000\016\000\016\000\016\000\021\000\021\000\021\000\003\000\
\000\000\021\000\021\000\021\000\000\000\021\000\000\000\000\000\
\000\000\000\000\021\000\021\000\000\000\021\000\021\000\000\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\021\000\
\021\000\000\000\000\000\000\000\000\000\021\000\021\000\000\000\
\021\000\021\000\021\000\021\000\021\000\021\000\021\000\000\000\
\000\000\017\000\017\000\017\000\004\000\000\000\017\000\017\000\
\017\000\000\000\017\000\000\000\000\000\000\000\000\000\017\000\
\017\000\000\000\017\000\017\000\000\000\017\000\017\000\017\000\
\017\000\017\000\017\000\017\000\017\000\017\000\000\000\000\000\
\000\000\000\000\017\000\017\000\000\000\017\000\017\000\017\000\
\017\000\017\000\017\000\017\000\018\000\018\000\018\000\005\000\
\000\000\018\000\018\000\018\000\000\000\018\000\000\000\000\000\
\000\000\000\000\018\000\018\000\000\000\018\000\018\000\000\000\
\018\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
\018\000\000\000\000\000\000\000\000\000\018\000\018\000\000\000\
\018\000\018\000\018\000\018\000\018\000\018\000\018\000\019\000\
\019\000\019\000\006\000\000\000\019\000\019\000\019\000\000\000\
\019\000\000\000\000\000\000\000\000\000\019\000\019\000\000\000\
\019\000\019\000\000\000\019\000\019\000\019\000\019\000\019\000\
\019\000\019\000\019\000\019\000\000\000\000\000\000\000\000\000\
\019\000\019\000\000\000\019\000\019\000\019\000\019\000\019\000\
\019\000\019\000\020\000\020\000\020\000\008\000\000\000\020\000\
\020\000\020\000\000\000\020\000\000\000\000\000\000\000\000\000\
\020\000\020\000\000\000\020\000\020\000\000\000\020\000\020\000\
\020\000\020\000\020\000\020\000\020\000\020\000\020\000\046\000\
\047\000\048\000\049\000\020\000\020\000\050\000\020\000\020\000\
\020\000\020\000\020\000\020\000\020\000\000\000\000\000\007\000\
\000\000\000\000\057\000\058\000\000\000\000\000\025\000\025\000\
\025\000\025\000\025\000\000\000\025\000\025\000\000\000\000\000\
\000\000\025\000\025\000\025\000\025\000\025\000\025\000\025\000\
\025\000\025\000\025\000\025\000\000\000\000\000\025\000\000\000\
\000\000\025\000\000\000\025\000\025\000\000\000\025\000\025\000\
\000\000\014\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\003\000\003\000\003\000\003\000\003\000\000\000\003\000\
\003\000\000\000\000\000\000\000\003\000\003\000\003\000\003\000\
\003\000\003\000\003\000\003\000\003\000\003\000\003\000\000\000\
\000\000\003\000\000\000\000\000\003\000\000\000\003\000\003\000\
\000\000\000\000\003\000\054\000\000\000\004\000\004\000\004\000\
\000\000\000\000\004\000\004\000\004\000\000\000\004\000\000\000\
\000\000\000\000\000\000\004\000\004\000\000\000\004\000\004\000\
\000\000\004\000\004\000\004\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\004\000\
\000\000\004\000\004\000\004\000\004\000\004\000\004\000\009\000\
\005\000\005\000\005\000\000\000\000\000\005\000\005\000\005\000\
\000\000\005\000\000\000\000\000\000\000\000\000\005\000\005\000\
\000\000\005\000\005\000\000\000\005\000\005\000\005\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\005\000\000\000\005\000\005\000\005\000\005\000\
\005\000\005\000\055\000\006\000\006\000\006\000\000\000\000\000\
\006\000\006\000\006\000\000\000\006\000\000\000\000\000\000\000\
\000\000\006\000\006\000\000\000\006\000\006\000\000\000\006\000\
\006\000\006\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\006\000\000\000\006\000\
\006\000\006\000\006\000\006\000\006\000\000\000\008\000\008\000\
\008\000\000\000\000\000\008\000\008\000\008\000\000\000\008\000\
\000\000\000\000\000\000\000\000\008\000\008\000\000\000\008\000\
\008\000\000\000\008\000\008\000\008\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\008\000\000\000\008\000\008\000\008\000\008\000\008\000\008\000\
\007\000\007\000\007\000\000\000\000\000\007\000\007\000\007\000\
\000\000\007\000\000\000\000\000\000\000\000\000\007\000\007\000\
\000\000\007\000\007\000\000\000\007\000\007\000\007\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\007\000\000\000\007\000\007\000\007\000\007\000\
\007\000\007\000\014\000\014\000\014\000\000\000\000\000\014\000\
\014\000\014\000\000\000\014\000\000\000\000\000\000\000\000\000\
\014\000\014\000\000\000\014\000\014\000\000\000\014\000\014\000\
\014\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\014\000\000\000\014\000\014\000\
\014\000\014\000\014\000\014\000\054\000\054\000\054\000\000\000\
\000\000\054\000\054\000\054\000\000\000\054\000\000\000\000\000\
\000\000\000\000\054\000\054\000\000\000\054\000\054\000\000\000\
\054\000\054\000\054\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\054\000\000\000\
\054\000\054\000\054\000\054\000\054\000\054\000\000\000\000\000\
\009\000\009\000\009\000\000\000\000\000\009\000\009\000\009\000\
\000\000\009\000\000\000\000\000\000\000\000\000\009\000\009\000\
\000\000\009\000\009\000\000\000\009\000\009\000\009\000\000\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\009\000\000\000\009\000\009\000\009\000\009\000\
\009\000\009\000\000\000\055\000\055\000\055\000\000\000\000\000\
\055\000\055\000\055\000\000\000\055\000\000\000\000\000\000\000\
\000\000\055\000\055\000\000\000\055\000\055\000\000\000\055\000\
\055\000\055\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\000\000\055\000\000\000\055\000\
\055\000\055\000\055\000\055\000\055\000\003\000\030\000\005\000\
\006\000\007\000\008\000\009\000\010\000\000\000\000\000\000\000\
\011\000\000\000\000\000\012\000\000\000\000\000\013\000\014\000\
\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\016\000\000\000\000\000\017\000\
\000\000\000\000\018\000\000\000\000\000\019\000\000\000\000\000\
\020\000\021\000\022\000\023\000\024\000\003\000\033\000\005\000\
\006\000\007\000\008\000\009\000\010\000\000\000\000\000\000\000\
\011\000\000\000\000\000\012\000\000\000\000\000\013\000\014\000\
\015\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\000\000\016\000\000\000\000\000\017\000\
\000\000\000\000\018\000\000\000\000\000\019\000\000\000\000\000\
\020\000\021\000\022\000\023\000\024\000\043\000\043\000\043\000\
\000\000\000\000\043\000\043\000\043\000\000\000\043\000\043\000\
\043\000\043\000\043\000\043\000\000\000\043\000\043\000\043\000\
\000\000\000\000\000\000\000\000\043\000\043\000\043\000\043\000\
\043\000\043\000\043\000\043\000\000\000\000\000\000\000\043\000\
\000\000\000\000\043\000\000\000\000\000\043\000\043\000\043\000\
\078\000\046\000\047\000\048\000\049\000\000\000\000\000\050\000\
\000\000\000\000\000\000\000\000\000\000\000\000\051\000\052\000\
\053\000\054\000\055\000\056\000\057\000\058\000\000\000\000\000\
\059\000\117\000\046\000\047\000\048\000\049\000\000\000\000\000\
\050\000\060\000\000\000\000\000\000\000\000\000\000\000\051\000\
\052\000\053\000\054\000\055\000\056\000\057\000\058\000\000\000\
\000\000\059\000\119\000\046\000\047\000\048\000\049\000\000\000\
\000\000\050\000\060\000\000\000\000\000\000\000\000\000\000\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\000\000\000\000\059\000\121\000\046\000\047\000\048\000\049\000\
\000\000\000\000\050\000\060\000\000\000\000\000\000\000\000\000\
\000\000\051\000\052\000\053\000\054\000\055\000\056\000\057\000\
\058\000\000\000\000\000\059\000\127\000\046\000\047\000\048\000\
\049\000\000\000\000\000\050\000\060\000\000\000\000\000\000\000\
\000\000\000\000\051\000\052\000\053\000\054\000\055\000\056\000\
\057\000\058\000\000\000\000\000\059\000\129\000\046\000\047\000\
\048\000\049\000\000\000\000\000\050\000\060\000\000\000\000\000\
\000\000\000\000\000\000\051\000\052\000\053\000\054\000\055\000\
\056\000\057\000\058\000\000\000\000\000\059\000\130\000\046\000\
\047\000\048\000\049\000\000\000\000\000\050\000\060\000\000\000\
\000\000\000\000\000\000\000\000\051\000\052\000\053\000\054\000\
\055\000\056\000\057\000\058\000\000\000\000\000\059\000\046\000\
\047\000\048\000\049\000\000\000\079\000\050\000\000\000\060\000\
\000\000\000\000\000\000\000\000\051\000\052\000\053\000\054\000\
\055\000\056\000\057\000\058\000\000\000\000\000\059\000\046\000\
\047\000\048\000\049\000\000\000\000\000\050\000\000\000\060\000\
\000\000\080\000\000\000\000\000\051\000\052\000\053\000\054\000\
\055\000\056\000\057\000\058\000\000\000\000\000\059\000\046\000\
\047\000\048\000\049\000\000\000\000\000\050\000\000\000\060\000\
\000\000\000\000\000\000\000\000\051\000\052\000\053\000\054\000\
\055\000\056\000\057\000\058\000\000\000\000\000\059\000\000\000\
\000\000\081\000\000\000\046\000\047\000\048\000\049\000\060\000\
\101\000\050\000\000\000\000\000\000\000\000\000\000\000\000\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\000\000\000\000\059\000\046\000\047\000\048\000\049\000\000\000\
\000\000\050\000\000\000\060\000\000\000\000\000\123\000\000\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\000\000\000\000\059\000\046\000\047\000\048\000\049\000\000\000\
\000\000\050\000\000\000\060\000\000\000\000\000\000\000\000\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\000\000\000\000\059\000\046\000\047\000\048\000\049\000\132\000\
\000\000\050\000\000\000\060\000\000\000\000\000\000\000\135\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\000\000\000\000\059\000\046\000\047\000\048\000\049\000\000\000\
\000\000\050\000\000\000\060\000\000\000\000\000\000\000\000\000\
\051\000\052\000\053\000\054\000\055\000\056\000\057\000\058\000\
\000\000\000\000\059\000\035\000\035\000\035\000\035\000\000\000\
\000\000\035\000\000\000\060\000\000\000\000\000\000\000\000\000\
\035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
\000\000\000\000\000\000\035\000"

let yycheck = "\061\000\
\000\000\028\000\015\001\066\000\006\000\009\001\068\000\009\001\
\010\000\011\000\012\000\016\001\001\000\015\000\016\000\017\000\
\009\001\009\001\020\000\021\000\022\000\023\000\024\000\002\001\
\013\001\014\001\000\000\029\000\017\001\034\001\034\001\013\001\
\034\001\032\000\033\000\097\000\063\000\100\000\065\000\034\001\
\102\000\034\001\034\001\000\000\046\000\047\000\048\000\049\000\
\050\000\051\000\052\000\053\000\054\000\055\000\056\000\057\000\
\058\000\059\000\060\000\001\001\002\001\003\001\009\001\009\001\
\006\001\007\001\008\001\069\000\042\001\002\001\040\001\073\000\
\074\000\015\001\076\000\000\000\018\001\019\001\080\000\011\001\
\012\001\013\001\014\001\114\000\255\255\017\001\000\000\034\001\
\034\001\255\255\255\255\071\000\255\255\035\001\255\255\075\000\
\038\001\077\000\255\255\041\001\042\001\255\255\255\255\105\000\
\255\255\255\255\255\255\109\000\255\255\111\000\255\255\113\000\
\255\255\255\255\255\255\117\000\255\255\119\000\255\255\255\255\
\255\255\123\000\255\255\255\255\255\255\127\000\255\255\129\000\
\255\255\000\000\132\000\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\008\001\255\255\255\255\255\255\012\001\255\255\
\255\255\015\001\016\001\255\255\018\001\019\001\020\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\032\001\255\255\255\255\035\001\255\255\255\255\
\038\001\255\255\255\255\041\001\000\000\255\255\044\001\045\001\
\046\001\047\001\048\001\001\001\002\001\003\001\004\001\005\001\
\006\001\007\001\008\001\255\255\255\255\255\255\012\001\255\255\
\255\255\015\001\255\255\255\255\018\001\019\001\020\001\255\255\
\001\001\002\001\003\001\255\255\255\255\006\001\007\001\008\001\
\255\255\255\255\032\001\255\255\255\255\035\001\015\001\000\000\
\038\001\018\001\019\001\041\001\255\255\255\255\044\001\045\001\
\046\001\047\001\048\001\255\255\010\001\011\001\012\001\013\001\
\014\001\255\255\035\001\017\001\255\255\038\001\255\255\255\255\
\041\001\255\255\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\255\255\255\255\034\001\255\255\255\255\255\255\
\255\255\001\001\002\001\003\001\000\000\043\001\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\255\255\
\016\001\017\001\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\035\001\255\255\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\001\001\002\001\003\001\000\000\
\255\255\006\001\007\001\008\001\255\255\010\001\011\001\012\001\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\255\255\255\255\034\001\035\001\255\255\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\013\001\014\001\015\001\016\001\017\001\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\255\255\255\255\
\255\255\035\001\255\255\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\001\001\002\001\003\001\000\000\255\255\006\001\
\007\001\008\001\255\255\010\001\011\001\012\001\013\001\014\001\
\015\001\016\001\017\001\018\001\019\001\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\255\255\255\255\034\001\035\001\255\255\037\001\038\001\
\039\001\040\001\041\001\255\255\043\001\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\013\001\014\001\015\001\016\001\017\001\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\035\001\
\255\255\037\001\038\001\039\001\040\001\041\001\255\255\043\001\
\001\001\002\001\003\001\000\000\255\255\006\001\007\001\008\001\
\255\255\010\001\011\001\012\001\255\255\014\001\015\001\016\001\
\017\001\018\001\019\001\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\255\255\
\255\255\034\001\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\255\255\255\255\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\014\001\015\001\016\001\017\001\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\035\001\
\255\255\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\001\001\002\001\003\001\000\000\255\255\006\001\007\001\008\001\
\255\255\010\001\011\001\012\001\013\001\014\001\015\001\016\001\
\017\001\018\001\019\001\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\255\255\
\255\255\255\255\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\011\001\012\001\013\001\
\014\001\015\001\016\001\017\001\018\001\019\001\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\255\255\255\255\034\001\035\001\255\255\037\001\
\038\001\039\001\040\001\041\001\255\255\043\001\001\001\002\001\
\003\001\000\000\255\255\006\001\007\001\008\001\255\255\010\001\
\011\001\012\001\013\001\014\001\015\001\016\001\017\001\018\001\
\019\001\255\255\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\255\255\255\255\034\001\
\035\001\255\255\037\001\038\001\039\001\040\001\041\001\255\255\
\043\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\035\001\255\255\037\001\038\001\039\001\
\040\001\041\001\255\255\043\001\001\001\002\001\003\001\000\000\
\255\255\006\001\007\001\008\001\255\255\010\001\011\001\012\001\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\255\255\255\255\034\001\035\001\255\255\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\255\255\
\255\255\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\011\001\012\001\013\001\014\001\015\001\
\016\001\017\001\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\035\001\255\255\037\001\038\001\039\001\
\255\255\041\001\042\001\043\001\001\001\002\001\003\001\000\000\
\255\255\006\001\007\001\008\001\255\255\010\001\011\001\012\001\
\255\255\014\001\015\001\016\001\017\001\018\001\019\001\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\255\255\255\255\034\001\035\001\255\255\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\011\001\012\001\255\255\014\001\015\001\016\001\017\001\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\255\255\255\255\
\034\001\035\001\255\255\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\001\001\002\001\003\001\000\000\255\255\006\001\
\007\001\008\001\255\255\010\001\011\001\012\001\255\255\014\001\
\015\001\016\001\017\001\018\001\019\001\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\255\255\255\255\034\001\035\001\255\255\037\001\038\001\
\039\001\040\001\041\001\042\001\043\001\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\014\001\015\001\016\001\017\001\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\035\001\
\255\255\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\001\001\002\001\003\001\000\000\255\255\006\001\007\001\008\001\
\255\255\010\001\011\001\012\001\255\255\255\255\015\001\016\001\
\255\255\018\001\019\001\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\255\255\
\255\255\034\001\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\255\255\255\255\001\001\002\001\003\001\
\000\000\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\255\255\255\255\015\001\016\001\255\255\018\001\019\001\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\035\001\
\255\255\037\001\038\001\039\001\040\001\041\001\042\001\043\001\
\001\001\002\001\003\001\000\000\255\255\006\001\007\001\008\001\
\255\255\010\001\011\001\012\001\255\255\255\255\015\001\016\001\
\255\255\018\001\019\001\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\255\255\
\255\255\034\001\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\043\001\001\001\002\001\003\001\000\000\255\255\
\006\001\007\001\008\001\255\255\010\001\255\255\255\255\255\255\
\255\255\015\001\016\001\255\255\018\001\019\001\255\255\021\001\
\022\001\023\001\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\255\255\255\255\034\001\035\001\255\255\037\001\
\038\001\039\001\040\001\041\001\042\001\043\001\001\001\002\001\
\003\001\000\000\255\255\006\001\007\001\008\001\255\255\010\001\
\255\255\255\255\255\255\255\255\015\001\016\001\255\255\018\001\
\019\001\255\255\021\001\022\001\023\001\024\001\025\001\026\001\
\027\001\028\001\029\001\030\001\031\001\255\255\255\255\034\001\
\035\001\255\255\037\001\038\001\039\001\040\001\041\001\042\001\
\043\001\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\255\255\255\255\255\255\255\255\015\001\
\016\001\255\255\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\255\255\255\255\
\255\255\255\255\034\001\035\001\255\255\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\001\001\002\001\003\001\000\000\
\255\255\006\001\007\001\008\001\255\255\010\001\255\255\255\255\
\255\255\255\255\015\001\016\001\255\255\018\001\019\001\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\255\255\255\255\255\255\255\255\034\001\035\001\255\255\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\255\255\
\255\255\001\001\002\001\003\001\000\000\255\255\006\001\007\001\
\008\001\255\255\010\001\255\255\255\255\255\255\255\255\015\001\
\016\001\255\255\018\001\019\001\255\255\021\001\022\001\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\255\255\255\255\
\255\255\255\255\034\001\035\001\255\255\037\001\038\001\039\001\
\040\001\041\001\042\001\043\001\001\001\002\001\003\001\000\000\
\255\255\006\001\007\001\008\001\255\255\010\001\255\255\255\255\
\255\255\255\255\015\001\016\001\255\255\018\001\019\001\255\255\
\021\001\022\001\023\001\024\001\025\001\026\001\027\001\028\001\
\029\001\255\255\255\255\255\255\255\255\034\001\035\001\255\255\
\037\001\038\001\039\001\040\001\041\001\042\001\043\001\001\001\
\002\001\003\001\000\000\255\255\006\001\007\001\008\001\255\255\
\010\001\255\255\255\255\255\255\255\255\015\001\016\001\255\255\
\018\001\019\001\255\255\021\001\022\001\023\001\024\001\025\001\
\026\001\027\001\028\001\029\001\255\255\255\255\255\255\255\255\
\034\001\035\001\255\255\037\001\038\001\039\001\040\001\041\001\
\042\001\043\001\001\001\002\001\003\001\000\000\255\255\006\001\
\007\001\008\001\255\255\010\001\255\255\255\255\255\255\255\255\
\015\001\016\001\255\255\018\001\019\001\255\255\021\001\022\001\
\023\001\024\001\025\001\026\001\027\001\028\001\029\001\011\001\
\012\001\013\001\014\001\034\001\035\001\017\001\037\001\038\001\
\039\001\040\001\041\001\042\001\043\001\255\255\255\255\000\000\
\255\255\255\255\030\001\031\001\255\255\255\255\010\001\011\001\
\012\001\013\001\014\001\255\255\016\001\017\001\255\255\255\255\
\255\255\021\001\022\001\023\001\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\255\255\
\255\255\037\001\255\255\039\001\040\001\255\255\042\001\043\001\
\255\255\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\010\001\011\001\012\001\013\001\014\001\255\255\016\001\
\017\001\255\255\255\255\255\255\021\001\022\001\023\001\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\255\255\
\255\255\034\001\255\255\255\255\037\001\255\255\039\001\040\001\
\255\255\255\255\043\001\000\000\255\255\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\010\001\255\255\
\255\255\255\255\255\255\015\001\016\001\255\255\018\001\019\001\
\255\255\021\001\022\001\023\001\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\035\001\
\255\255\037\001\038\001\039\001\040\001\041\001\042\001\000\000\
\001\001\002\001\003\001\255\255\255\255\006\001\007\001\008\001\
\255\255\010\001\255\255\255\255\255\255\255\255\015\001\016\001\
\255\255\018\001\019\001\255\255\021\001\022\001\023\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\000\000\001\001\002\001\003\001\255\255\255\255\
\006\001\007\001\008\001\255\255\010\001\255\255\255\255\255\255\
\255\255\015\001\016\001\255\255\018\001\019\001\255\255\021\001\
\022\001\023\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\035\001\255\255\037\001\
\038\001\039\001\040\001\041\001\042\001\255\255\001\001\002\001\
\003\001\255\255\255\255\006\001\007\001\008\001\255\255\010\001\
\255\255\255\255\255\255\255\255\015\001\016\001\255\255\018\001\
\019\001\255\255\021\001\022\001\023\001\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\035\001\255\255\037\001\038\001\039\001\040\001\041\001\042\001\
\001\001\002\001\003\001\255\255\255\255\006\001\007\001\008\001\
\255\255\010\001\255\255\255\255\255\255\255\255\015\001\016\001\
\255\255\018\001\019\001\255\255\021\001\022\001\023\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\001\001\002\001\003\001\255\255\255\255\006\001\
\007\001\008\001\255\255\010\001\255\255\255\255\255\255\255\255\
\015\001\016\001\255\255\018\001\019\001\255\255\021\001\022\001\
\023\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\035\001\255\255\037\001\038\001\
\039\001\040\001\041\001\042\001\001\001\002\001\003\001\255\255\
\255\255\006\001\007\001\008\001\255\255\010\001\255\255\255\255\
\255\255\255\255\015\001\016\001\255\255\018\001\019\001\255\255\
\021\001\022\001\023\001\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\035\001\255\255\
\037\001\038\001\039\001\040\001\041\001\042\001\255\255\255\255\
\001\001\002\001\003\001\255\255\255\255\006\001\007\001\008\001\
\255\255\010\001\255\255\255\255\255\255\255\255\015\001\016\001\
\255\255\018\001\019\001\255\255\021\001\022\001\023\001\255\255\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\035\001\255\255\037\001\038\001\039\001\040\001\
\041\001\042\001\255\255\001\001\002\001\003\001\255\255\255\255\
\006\001\007\001\008\001\255\255\010\001\255\255\255\255\255\255\
\255\255\015\001\016\001\255\255\018\001\019\001\255\255\021\001\
\022\001\023\001\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\255\255\035\001\255\255\037\001\
\038\001\039\001\040\001\041\001\042\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\255\255\255\255\255\255\
\012\001\255\255\255\255\015\001\255\255\255\255\018\001\019\001\
\020\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\032\001\255\255\255\255\035\001\
\255\255\255\255\038\001\255\255\255\255\041\001\255\255\255\255\
\044\001\045\001\046\001\047\001\048\001\001\001\002\001\003\001\
\004\001\005\001\006\001\007\001\008\001\255\255\255\255\255\255\
\012\001\255\255\255\255\015\001\255\255\255\255\018\001\019\001\
\020\001\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\255\255\032\001\255\255\255\255\035\001\
\255\255\255\255\038\001\255\255\255\255\041\001\255\255\255\255\
\044\001\045\001\046\001\047\001\048\001\001\001\002\001\003\001\
\255\255\255\255\006\001\007\001\008\001\255\255\010\001\011\001\
\012\001\013\001\014\001\015\001\255\255\017\001\018\001\019\001\
\255\255\255\255\255\255\255\255\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\255\255\035\001\
\255\255\255\255\038\001\255\255\255\255\041\001\042\001\043\001\
\010\001\011\001\012\001\013\001\014\001\255\255\255\255\017\001\
\255\255\255\255\255\255\255\255\255\255\255\255\024\001\025\001\
\026\001\027\001\028\001\029\001\030\001\031\001\255\255\255\255\
\034\001\010\001\011\001\012\001\013\001\014\001\255\255\255\255\
\017\001\043\001\255\255\255\255\255\255\255\255\255\255\024\001\
\025\001\026\001\027\001\028\001\029\001\030\001\031\001\255\255\
\255\255\034\001\010\001\011\001\012\001\013\001\014\001\255\255\
\255\255\017\001\043\001\255\255\255\255\255\255\255\255\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\010\001\011\001\012\001\013\001\014\001\
\255\255\255\255\017\001\043\001\255\255\255\255\255\255\255\255\
\255\255\024\001\025\001\026\001\027\001\028\001\029\001\030\001\
\031\001\255\255\255\255\034\001\010\001\011\001\012\001\013\001\
\014\001\255\255\255\255\017\001\043\001\255\255\255\255\255\255\
\255\255\255\255\024\001\025\001\026\001\027\001\028\001\029\001\
\030\001\031\001\255\255\255\255\034\001\010\001\011\001\012\001\
\013\001\014\001\255\255\255\255\017\001\043\001\255\255\255\255\
\255\255\255\255\255\255\024\001\025\001\026\001\027\001\028\001\
\029\001\030\001\031\001\255\255\255\255\034\001\010\001\011\001\
\012\001\013\001\014\001\255\255\255\255\017\001\043\001\255\255\
\255\255\255\255\255\255\255\255\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\011\001\
\012\001\013\001\014\001\255\255\016\001\017\001\255\255\043\001\
\255\255\255\255\255\255\255\255\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\011\001\
\012\001\013\001\014\001\255\255\255\255\017\001\255\255\043\001\
\255\255\021\001\255\255\255\255\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\011\001\
\012\001\013\001\014\001\255\255\255\255\017\001\255\255\043\001\
\255\255\255\255\255\255\255\255\024\001\025\001\026\001\027\001\
\028\001\029\001\030\001\031\001\255\255\255\255\034\001\255\255\
\255\255\037\001\255\255\011\001\012\001\013\001\014\001\043\001\
\016\001\017\001\255\255\255\255\255\255\255\255\255\255\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\011\001\012\001\013\001\014\001\255\255\
\255\255\017\001\255\255\043\001\255\255\255\255\022\001\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\011\001\012\001\013\001\014\001\255\255\
\255\255\017\001\255\255\043\001\255\255\255\255\255\255\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\011\001\012\001\013\001\014\001\039\001\
\255\255\017\001\255\255\043\001\255\255\255\255\255\255\023\001\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\011\001\012\001\013\001\014\001\255\255\
\255\255\017\001\255\255\043\001\255\255\255\255\255\255\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\034\001\011\001\012\001\013\001\014\001\255\255\
\255\255\017\001\255\255\043\001\255\255\255\255\255\255\255\255\
\024\001\025\001\026\001\027\001\028\001\029\001\030\001\031\001\
\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
\255\255\255\255\255\255\043\001"

let yynames_const = "\
  BEGIN_FUNCTION\000\
  DEFINITION\000\
  END_FUNCTION\000\
  EOF\000\
  PLUS\000\
  SUB\000\
  DIV\000\
  MULT\000\
  LPAREN\000\
  RPAREN\000\
  MODULO\000\
  TRUE\000\
  FALSE\000\
  IF\000\
  THEN\000\
  ELSE\000\
  END\000\
  EQ\000\
  DIFF\000\
  INF\000\
  INFEQ\000\
  SUP\000\
  SUPEQ\000\
  AND\000\
  OR\000\
  NOT\000\
  REC\000\
  SEPARATOR\000\
  UNIFY\000\
  MATCHEX\000\
  WITH\000\
  ANY\000\
  ARROW\000\
  PIPE\000\
  ARRAY_END\000\
  ARRAY_LINK\000\
  SEQUENCER\000\
  PRINT\000\
  TOINT\000\
  TOFLOAT\000\
  TOSTRING\000\
  TOBOOL\000\
  "

let yynames_block = "\
  INT\000\
  IDENT\000\
  ATOM\000\
  NAMEDFUN\000\
  RECNAME\000\
  STRING\000\
  FLOAT\000\
  "

let yyact = [|
  (fun _ -> failwith "parser")
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'declare) in
    Obj.repr(
# 85 "parser.mly"
                                           ( _1                        )
# 924 "parser.ml"
               : Expr.expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 88 "parser.mly"
                                          (_1)
# 931 "parser.ml"
               : 'declare))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 91 "parser.mly"
                                        ( _1                        )
# 938 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 92 "parser.mly"
                             (Print _2)
# 945 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 93 "parser.mly"
                                  (ToInt _2)
# 952 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 94 "parser.mly"
                                    (ToFloat _2)
# 959 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 95 "parser.mly"
                                   (ToBool _2)
# 966 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 96 "parser.mly"
                                     (ToString _2)
# 973 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 97 "parser.mly"
                             (Sequencer(_1,_3))
# 981 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 98 "parser.mly"
                                       ( Mod(_1,_3)                )
# 989 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 99 "parser.mly"
                                     ( Add(_1,_3)                )
# 997 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 100 "parser.mly"
                                    ( Sub(_1,_3)                )
# 1005 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 101 "parser.mly"
                                    (Neg(_2))
# 1012 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 102 "parser.mly"
                                    ( Div(_1,_3)                )
# 1020 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 103 "parser.mly"
                                     ( Mult(_1,_3)                )
# 1028 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 104 "parser.mly"
                                    (Eq(_1,_3))
# 1036 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 105 "parser.mly"
                                     (Inf(_1,_3))
# 1044 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 106 "parser.mly"
                                       (Infeq(_1,_3))
# 1052 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 107 "parser.mly"
                                     (Sup(_1,_3))
# 1060 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 108 "parser.mly"
                                       (Supeq(_1,_3))
# 1068 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 109 "parser.mly"
                                    (Diff(_1,_3))
# 1076 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 110 "parser.mly"
                                    (And(_1,_3))
# 1084 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _3 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 111 "parser.mly"
                                   (And(_1,_3))
# 1092 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 112 "parser.mly"
                               (Not _2)
# 1099 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'simpleexpr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexprlist) in
    Obj.repr(
# 113 "parser.mly"
                                        ( make_app _1 (List.rev _2) )
# 1107 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 115 "parser.mly"
                                                         (RecFun((remove_end _1 2),_2,_4,_6))
# 1117 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'separatelist) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 116 "parser.mly"
                                                                       (RecFun (remove_end _1 2,_2,(listToFun (List.rev _3) _5),_7))
# 1128 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 118 "parser.mly"
                                                          (NamedFun(remove_end _1 1,_2,_4,_6))
# 1138 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 6 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 5 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 4 : 'separatelist) in
    let _5 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _7 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 119 "parser.mly"
                                                                        (NamedFun(remove_end _1 1,_2,(listToFun (List.rev _3) _5),_7))
# 1149 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 121 "parser.mly"
                                         (NamedExp(remove_end _1 1,_2,_4))
# 1158 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 5 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 3 : 'expr) in
    let _6 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 123 "parser.mly"
                                                             (Cond (_2,_4,_6))
# 1167 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'tuplenode) in
    Obj.repr(
# 124 "parser.mly"
                                                 (NamedTuple(_1,Tuple(tuplelen (TupleNode(_3,_4)),TupleNode(_3,_4))))
# 1176 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 125 "parser.mly"
                                       (NamedTuple(_1,Tuple(1,TupleNode(_3,TupleEnd))))
# 1184 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 2 : string) in
    Obj.repr(
# 126 "parser.mly"
                                              (Atom _1)
# 1191 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'tuplenode) in
    Obj.repr(
# 127 "parser.mly"
                                                 (Tuple(tuplelen (TupleNode(_1,_2)),TupleNode(_1,_2)))
# 1199 "parser.ml"
               : 'expr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 131 "parser.mly"
                                                (Atom _1)
# 1206 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : float) in
    Obj.repr(
# 132 "parser.mly"
                                          (Float _1)
# 1213 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'simpleexpr) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'Llist) in
    Obj.repr(
# 133 "parser.mly"
                             (Node(_1,_2))
# 1221 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 134 "parser.mly"
                                          (String(toStr _1))
# 1228 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 135 "parser.mly"
                                          (Any)
# 1234 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 136 "parser.mly"
                                          (Arr_End)
# 1240 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : int) in
    Obj.repr(
# 137 "parser.mly"
                                          ( Int _1                    )
# 1247 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 138 "parser.mly"
                                          ( Var _1                    )
# 1254 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 139 "parser.mly"
                                          (Bool true)
# 1260 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    Obj.repr(
# 140 "parser.mly"
                                          (Bool false)
# 1266 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 141 "parser.mly"
                                          (_2)
# 1273 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 3 : string) in
    let _4 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 142 "parser.mly"
                                                             ( Fun (_2,_4)  )
# 1281 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 4 : string) in
    let _3 = (Parsing.peek_val __caml_parser_env 3 : 'separatelist) in
    let _5 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 143 "parser.mly"
                                                                          ( Fun (_2, listToFun (List.rev _3) _5)  )
# 1290 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 1 : 'expr) in
    Obj.repr(
# 144 "parser.mly"
                                            ( Exp(_2)  )
# 1297 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'matchlist) in
    Obj.repr(
# 145 "parser.mly"
                                (buildUnify (_2) (List.rev _4))
# 1305 "parser.ml"
               : 'simpleexpr))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'Llist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'Llist) in
    Obj.repr(
# 149 "parser.mly"
                             (Node(_1,_2))
# 1313 "parser.ml"
               : 'Llist))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 150 "parser.mly"
                             (_2)
# 1320 "parser.ml"
               : 'Llist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'tuplenode) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'tuplenode) in
    Obj.repr(
# 156 "parser.mly"
                               (TupleNode(_1,_2))
# 1328 "parser.ml"
               : 'tuplenode))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 157 "parser.mly"
                          (_2)
# 1335 "parser.ml"
               : 'tuplenode))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 2 : 'expr) in
    let _4 = (Parsing.peek_val __caml_parser_env 0 : 'expr) in
    Obj.repr(
# 160 "parser.mly"
                           ((_2,_4))
# 1343 "parser.ml"
               : 'matchcond))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'matchcond) in
    Obj.repr(
# 164 "parser.mly"
                ([_1])
# 1350 "parser.ml"
               : 'matchlist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'matchlist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'matchcond) in
    Obj.repr(
# 165 "parser.mly"
                          (_2::_1)
# 1358 "parser.ml"
               : 'matchlist))
; (fun __caml_parser_env ->
    let _2 = (Parsing.peek_val __caml_parser_env 0 : string) in
    Obj.repr(
# 168 "parser.mly"
                       (_2)
# 1365 "parser.ml"
               : 'separatevar))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'separatevar) in
    Obj.repr(
# 172 "parser.mly"
                  ( [_1] )
# 1372 "parser.ml"
               : 'separatelist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'separatelist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'separatevar) in
    Obj.repr(
# 173 "parser.mly"
                               (_2::_1)
# 1380 "parser.ml"
               : 'separatelist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 178 "parser.mly"
               ( [_1] )
# 1387 "parser.ml"
               : 'simpleexprlist))
; (fun __caml_parser_env ->
    let _1 = (Parsing.peek_val __caml_parser_env 1 : 'simpleexprlist) in
    let _2 = (Parsing.peek_val __caml_parser_env 0 : 'simpleexpr) in
    Obj.repr(
# 179 "parser.mly"
                               ( _2 :: _1 )
# 1395 "parser.ml"
               : 'simpleexprlist))
(* Entry main *)
; (fun __caml_parser_env -> raise (Parsing.YYexit (Parsing.peek_val __caml_parser_env 0)))
|]
let yytables =
  { Parsing.actions=yyact;
    Parsing.transl_const=yytransl_const;
    Parsing.transl_block=yytransl_block;
    Parsing.lhs=yylhs;
    Parsing.len=yylen;
    Parsing.defred=yydefred;
    Parsing.dgoto=yydgoto;
    Parsing.sindex=yysindex;
    Parsing.rindex=yyrindex;
    Parsing.gindex=yygindex;
    Parsing.tablesize=yytablesize;
    Parsing.table=yytable;
    Parsing.check=yycheck;
    Parsing.error_function=parse_error;
    Parsing.names_const=yynames_const;
    Parsing.names_block=yynames_block }
let main (lexfun : Lexing.lexbuf -> token) (lexbuf : Lexing.lexbuf) =
   (Parsing.yyparse yytables 1 lexfun lexbuf : Expr.expr)
