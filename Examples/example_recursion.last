RevAppend@\X,Y.
	unify X with
		| []	-> Y
		| A::B	-> RevAppend B (A::Y)
;

Rev\X.
	RevAppend X []
;

Ackermann@\X.
	unify X with
		| (0,N) -> N+1
		| (M,N) :- ((M>0) && (N>0)) -> Ackermann (M-1,Ackermann (M,N-1))
		| (M,N) :- M>0 -> Ackermann (M-1,1)
;

Fib@\X,A,B.
	unify X with
	| H :- X>0 -> (Fib (X-1) B (A+B))
	| 0 -> A
;

print(Ackermann (2,2))